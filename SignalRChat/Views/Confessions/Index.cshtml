@model KeyValuePair<int, IEnumerable<SignalRChat.Models.Confession>>

@{
    ViewBag.Title = "confessr";
}

<h2>confessional</h2>

<div class="container">
    <input type="text" name="FirstName" id="ishuman" />
    <input type="text" id="displayname" rquired />
    <br />
    <input type="text" id="message" autofocus="autofocus" required />
    <input type="button" id="sendmessage" value="Send" />
    <br />
    <div class="alert-info">
        Remember me: &nbsp;
        <input type="checkbox" id="rememberme" checked="checked" />
    </div>
    <ul id="discussion" class="discussion media media-list">
        @foreach (var item in Model.Value)
        {
            <li class="media">
                <div class="confession original-confession actionable-confession media-body">
                    <h4 class="media-heading confessionHeader"> @Html.DisplayFor(modelItem => item.Submitter) </h4>
                    <div class="entities-media-container media-container confession">
                        @Html.DisplayFor(modelItem => item.TheConfession)
                    </div>
                    <div class="media-footer confessionFooter confessionLinks">
                        <div class="confessionFooterSpacer"></div>
                        <div class="confessionRank" >
                            <img id="img_@Html.DisplayFor(modelItem => item.Id)" class="confessionRankPic" src="~/Images/emptyStar16px.png" alt="Rate"/> @Html.DisplayFor(modelItem => item.Rank)
                        </div>
                        <div class="confessionLink"><a href="/Confessions/Details/@Html.DisplayFor(modelItem => item.Id)"><img src="~/Images/link.png" alt="Share" /></a></div>
                    </div>
                </div>
            </li>
        }
    </ul>
    <script>
        // Inline js to write the back button
        (function () {
            var index = @Html.DisplayFor(modelItem => Model.Key);
            if ((index - 10) >= 0){
                document.write('<a class="btn btn-primary" href="/Confessions/Index/' + (@Html.DisplayFor(modelItem => Model.Key)-10) + '"><< Back</a>');
            }
        })();
    </script>
    
    <a class="btn btn-primary" href="/Confessions/Index/@Html.DisplayFor(modelItem => Model.Key)/">Next >></a>
    @*@Html.ActionLink("confessional", "Index", "Confessions")*@
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!--Reference scripts for saving/writing cookies-->
    <script src="~/Scripts/cookies.js"></script>
    <script src="~/Scripts/confessr_utils.js"></script>

    <!--SignalR script to update the chat page and send messages.-->
    <script>
        // honeypot all the bots!
        $('#ishuman').css('display', 'none');

        function randomUserNumber() {
            return Math.floor((Math.random() * 1000000) + 1);
        }

        $(function () {
            // Reference the auto-generated proxy for the hub.
            var confession = $.connection.confessionHub;
            // Create a function that the hub can call back to display messages.
            confession.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').prepend('<li class="confession"><strong class="confessionBolding">' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            // Try to get the user name from a cookie and store it to prepend to messages.
            // If no cookie found, generate an anonymous user name
            var cook = readCookie("displayname");
            if (cook != null) {
                document.getElementById('displayname').defaultValue = cook;
            }
            else {
                document.getElementById('displayname').defaultValue = "Anonymous user " + randomUserNumber();
            }

            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {

                // Define what to do when we send a message: send the message
                // write a cookie(possibly) and clear the text box
                function SendMessage() {
                    // Call the Send method on the hub (first verify that this isn't a bot).
                    var submitName = $('#displayname').val();
                    var submitText = $('#message').val();
                    if ($('#ishuman').val() == '' && submitText != '' && submitName != '') {
                        confession.server.send($('#displayname').val(), $('#message').val());
                    }
                    // If the 'remember' box is checked, save a cookie
                    if($('#rememberme').is(':checked')){
                        createCookie('displayname', $('#displayname').val(), 365);
                    }
                    else {
                        eraseCookie('displayname');
                    }

                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                };

                // Add an event listener for the 'enter' key and submit on it
                $('#message').keydown(function (event) {
                    if (event.which == 13) {
                        SendMessage();
                    }
                });
                // Add a click event for the submit button and submit on it
                $('#sendmessage').click(function () {
                    SendMessage();
                });
            });

        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function imgLoadReroute(imgId) {
            alert(imgId);
            //var imgId = $('img').attr('id');
            if(didRateConfession(imgId)){
                alert("rated");
                $('#'+imgId).attr('src', '~/Images/filledStar16px.png');
            }
        }
    </script>

}
    
@*  The code below is all of the auto-generated code for this page.
    
@model IEnumerable<SignalRChat.Models.Confession>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TheConfession)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Submitter)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rank)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TheConfession)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Submitter)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rank)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@